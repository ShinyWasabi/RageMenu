USING "util_teleport.sch"

PROC FEATURES_TELEPORT_TELEPORT_TO_WAYPOINT()
    IF NOT IS_WAYPOINT_ACTIVE()
        EXIT
    ENDIF

    BLIP_INDEX biWaypoint = GET_FIRST_BLIP_INFO_ID(GET_WAYPOINT_BLIP_ENUM_ID())
    IF DOES_BLIP_EXIST(biWaypoint)
        VECTOR vWaypointCoords = GET_BLIP_INFO_ID_COORD(biWaypoint)
        UTIL_TELEPORT_LOAD_GROUND_AT_3DCOORD(vWaypointCoords)
        SET_PED_COORDS_KEEP_VEHICLE(PLAYER_PED_ID(), vWaypointCoords)
    ENDIF
ENDPROC

PROC FEATURES_TELEPORT_TELEPORT_TO_OBJECTIVE()
    BLIP_SPRITE eObjectiveSprites[4]
    eObjectiveSprites[0] = RADAR_OBJECTIVE_BLUE
    eObjectiveSprites[1] = RADAR_OBJECTIVE_GREEN
    eObjectiveSprites[2] = RADAR_OBJECTIVE_RED
    eObjectiveSprites[3] = RADAR_OBJECTIVE_YELLOW
	
    VECTOR vLocation
    BLIP_SPRITE eSprite
    REPEAT COUNT_OF(eObjectiveSprites) eSprite
        IF UTIL_TELEPORT_GET_BLIP_LOCATION(vLocation, eSprite)
            SET_PED_COORDS_KEEP_VEHICLE(PLAYER_PED_ID(), vLocation)
            EXIT
        ENDIF
    ENDREPEAT
ENDPROC

PROC FEATURES_TELEPORT_TELEPORT_TO_OFFSET(VECTOR offset)
    VECTOR coords = GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER_PED_ID(), offset)
    SET_PED_COORDS_KEEP_VEHICLE(PLAYER_PED_ID(), coords)
ENDPROC
